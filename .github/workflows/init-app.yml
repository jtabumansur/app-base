---
name: Project Initialization Pipeline

on:
  workflow_dispatch:
    inputs:
      projectName:
        description: "Name of the project"
        required: true

jobs:
  setup-project:
    runs-on: ubuntu-latest

    outputs:
      FOLDER_NAME: ${{ steps.normalize.outputs.normalized-name }}

    steps:
      - name: Normalize project name
        id: normalize
        run: |
          NORMALIZED_NAME=$(echo "${{ github.event.inputs.projectName }}" | tr '[:upper:]' '[:lower:]' | sed 's/ /_/g')
          echo "normalized-name=$NORMALIZED_NAME" >> $GITHUB_OUTPUT

      - name: Create project directory
        run: |
          mkdir -p "$HOME/git"
          echo "Created base directory: $HOME/git"

          PROJECT_DIR="$HOME/git/${{ steps.normalize.outputs.normalized-name }}"
          mkdir -p "$PROJECT_DIR"
          echo "Project directory created at: $PROJECT_DIR"

      - name: Verify and save project directory
        run: |
          PROJECT_DIR="$HOME/git/${{ steps.normalize.outputs.normalized-name }}"
          if [ ! -d "$PROJECT_DIR" ]; then
            echo "Error: Directory $PROJECT_DIR was not created."
            exit 1
          fi
        # Faz upload do artifact
        uses: actions/upload-artifact@v3
        with:
          name: project-dir
          path: $HOME/git/${{ steps.normalize.outputs.normalized-name }}

  setup-frontend:
    needs: setup-project
    runs-on: ubuntu-latest
    env:
      FOLDER_NAME: ${{ needs.setup-project.outputs.FOLDER_NAME }}

    steps:
      - name: Download project directory
        uses: actions/download-artifact@v3
        with:
          name: project-dir

      - name: Move project directory
        run: |
          PROJECT_DIR="$HOME/git/$FOLDER_NAME"
          mkdir -p "$HOME/git"
          mv $FOLDER_NAME "$PROJECT_DIR"
          echo "Project directory moved to: $PROJECT_DIR"

      - name: Set up frontend
        run: |
          PROJECT_DIR="$HOME/git/$FOLDER_NAME"
          cd "$PROJECT_DIR"
          npx create-react-app frontend --use-npm --template cra-template
          echo "Frontend setup completed"

      - name: Upload updated project directory
        uses: actions/upload-artifact@v3
        with:
          name: project-dir
          path: $HOME/git/$FOLDER_NAME

  setup-backend:
    needs: setup-frontend
    runs-on: ubuntu-latest
    env:
      FOLDER_NAME: ${{ needs.setup-project.outputs.FOLDER_NAME }}

    steps:
      - name: Download project directory
        uses: actions/download-artifact@v3
        with:
          name: project-dir

      - name: Move project directory
        run: |
          PROJECT_DIR="$HOME/git/$FOLDER_NAME"
          mkdir -p "$HOME/git"
          mv $FOLDER_NAME "$PROJECT_DIR"
          echo "Project directory moved to: $PROJECT_DIR"

      - name: Set up backend
        run: |
          PROJECT_DIR="$HOME/git/$FOLDER_NAME"
          cd "$PROJECT_DIR"
          mkdir backend
          cd backend
          npm init -y
          echo '{"scripts": {"dev": "nodemon server.js"}}' > package.json
          echo "Backend setup completed"

      - name: Upload updated project directory
        uses: actions/upload-artifact@v3
        with:
          name: project-dir
          path: $HOME/git/$FOLDER_NAME
